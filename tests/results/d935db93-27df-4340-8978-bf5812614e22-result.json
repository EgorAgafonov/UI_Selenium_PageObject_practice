{"name": "test_create_pet_params_positive[integer num-latin chars-cyrillic chars-photo_jpeg_<100kb]", "status": "broken", "statusDetails": {"message": "TypeError: 'str' object is not callable", "trace": "self = <tests.test_my_pets_positive.TestMyPetsPagePositive object at 0x000001EDF75A52D0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"60759853ba6430bf192f7c98c702d91b\")>\nphoto = 'C:\\\\Users\\\\agafo\\\\PycharmProjects\\\\pythonProject15_PageObjects_tests\\\\photos\\\\2.jpg', name = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя', breed = 'abcdefghijklmnopqrstwxyz', age = 3\n\n    @pytest.mark.create_pairwise\n    @pytest.mark.parametrize(\"photo\", [photo_1_jpg, photo_2_jpg], ids=[\"photo_jpeg_>100kb\", \"photo_jpeg_<100kb\"])\n    @pytest.mark.parametrize(\"name\", [russian_chars(), latin_chars()], ids=[\"cyrillic chars\", \"latin chars\"])\n    @pytest.mark.parametrize(\"breed\", [latin_chars(), russian_chars()], ids=[\"latin chars\", \"cyrillic chars\"])\n    @pytest.mark.parametrize(\"age\", [3, 0.9], ids=[\"integer num\", \"float num\"])\n    @allure.feature('Создание карточек питомцев_POSITIVE TESTS')\n    @allure.story(\"Создание карточек питомцев с параметризацией данных (верифицированные значения)\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_create_pet_params_positive(self, driver, photo, name, breed, age):\n        \"\"\"Позитивный тест проверки создания карточек питомцев с верифицированными параметрами значений согласно\n        спецификации. Реализована техника попарного тестирования Pairwise. Валидация каждого теста выполнена успешно в\n        случае, если после ввода всех необходимых данных в форму карточки, пользователь остается на страницы с\n        эндпоинтом \"/my_pets\", а каждая сгенерированная карточка отображается в стеке питомцев пользователя со всеми\n        переданными через фикстуру данными.\"\"\"\n    \n        with allure.step(\"Шаг 1: Создание карточки питомца с вериф. знач. photo, name, breed, age\"):\n            page = MyPetsPage(driver)\n            page.add_pet_btn_click()\n            page.enter_photo(photo)\n            page.enter_name(name)\n            page.enter_breed(breed)\n            page.enter_age(age)\n            page.submit_pet_btn_click()\n        with allure.step(\"Шаг 2: Перезагрузка страницы после создания карточки.\"):\n            page.refresh_page()\n            page.wait_page_loaded()\n        with allure.step(\"Шаг 3: Assert-проверка успешной валидации теста.\"):\n            if page.get_relative_link() != \"/my_pets\":\n                allure.attach(page.get_page_screenshot_PNG(),\n                              name=\"create_pet_params_FAILED\",\n                              attachment_type=allure.attachment_type.PNG)\n                print(Style.DIM + Fore.RED + f\"\\nКарточка питомца не создана!\")\n            else:\n>               assert page.get_relative_link() == \"/my_pets\"()\nE               TypeError: 'str' object is not callable\n\ntest_my_pets_positive.py:108: TypeError"}, "description": "Позитивный тест проверки создания карточек питомцев с верифицированными параметрами значений согласно\n        спецификации. Реализована техника попарного тестирования Pairwise. Валидация каждого теста выполнена успешно в\n        случае, если после ввода всех необходимых данных в форму карточки, пользователь остается на страницы с\n        эндпоинтом \"/my_pets\", а каждая сгенерированная карточка отображается в стеке питомцев пользователя со всеми\n        переданными через фикстуру данными.", "steps": [{"name": "Шаг 1: Создание карточки питомца с вериф. знач. photo, name, breed, age", "status": "passed", "start": 1705672962718, "stop": 1705672963249}, {"name": "Шаг 2: Перезагрузка страницы после создания карточки.", "status": "passed", "start": 1705672963249, "stop": 1705672966594}, {"name": "Шаг 3: Assert-проверка успешной валидации теста.", "status": "broken", "statusDetails": {"message": "TypeError: 'str' object is not callable\n", "trace": "  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject15_PageObjects_tests\\tests\\test_my_pets_positive.py\", line 108, in test_create_pet_params_positive\n    assert page.get_relative_link() == \"/my_pets\"()\n"}, "start": 1705672966594, "stop": 1705672966599}], "parameters": [{"name": "age", "value": "3"}, {"name": "breed", "value": "'abcdefghijklmnopqrstwxyz'"}, {"name": "name", "value": "'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'"}, {"name": "photo", "value": "'C:\\Users\\agafo\\PycharmProjects\\pythonProject15_PageObjects_tests\\photos\\2.jpg'"}], "start": 1705672962718, "stop": 1705672966599, "uuid": "cc4dd8fd-73c1-4617-a6a5-bdd6ab85a970", "historyId": "bd3560e077ac734e39e73b96b6e73b11", "testCaseId": "cdc58d390027e51b0af109c078ba812d", "fullName": "tests.test_my_pets_positive.TestMyPetsPagePositive#test_create_pet_params_positive", "labels": [{"name": "story", "value": "Создание карточек питомцев с параметризацией данных (верифицированные значения)"}, {"name": "feature", "value": "Создание карточек питомцев_POSITIVE TESTS"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "create_pairwise"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_my_pets_positive"}, {"name": "subSuite", "value": "TestMyPetsPagePositive"}, {"name": "host", "value": "DESKTOP-J32RPI2"}, {"name": "thread", "value": "18660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_my_pets_positive"}]}