{"name": "test_create_pet_simple_positive", "status": "broken", "statusDetails": {"message": "TypeError: a bytes-like object is required, not 'NoneType'", "trace": "self = <tests.test_my_pets_positive.TestMyPetsPagePositive object at 0x0000020557FB87C0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f2b85e6c7f4b03cfca73945045829390\")>\n\n    @pytest.mark.one\n    @pytest.mark.create_simple\n    @allure.feature('Создание карточек питомцев_POSITIVE TESTS')\n    @allure.story(\"Создание карточки питомца без фото\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_create_pet_simple_positive(self, driver):\n        \"\"\"Позитивный тест проверки создания карточки питомца без фото. Валидация теста выполнена успешно в случае, если\n        после ввода всех необходимых данных в форму карточки, пользователь остается на страницы path = \"/my_pets\", а\n        карточка отображается в стеке питомцев пользователя со всеми переданными данными (без фото соответственно).\"\"\"\n        with allure.step(\"Шаг 1: Ввод данных и создание карточки питомца без фото.\"):\n            page = MyPetsPage(driver)\n            page.add_pet_btn_click()\n            page.enter_name(\"Tusya\")\n            page.enter_breed(\"abyssinian\")\n            page.enter_age(1.6)\n            page.submit_pet_btn_click()\n        with allure.step(\"Шаг 2: Перезагрузка страницы с созданной карточкой питомца.\"):\n            page.refresh_page()\n            page.wait_page_loaded()\n        with allure.step(\"Шаг 3: Assert-проверка успешной валидации теста.\"):\n            if page.get_relative_link() != \"/my_pets\":\n                screenshot = page.make_screenshot()\n                allure.attach(screenshot,\n                              name=\"create_pet_simple_FAILED\",\n                              attachment_type=allure.attachment_type.PNG)\n                print(Style.DIM + Fore.RED + f\"\\nКарточка питомца не создана!\")\n            else:\n                assert page.get_relative_link() == \"/my_pets\"\n                screenshot = page.make_screenshot()\n>               allure.attach(screenshot,\n                              name=\"create_pet_simple_PASSED\",\n                              attachment_type=allure.attachment_type.PNG)\n\ntest_my_pets_positive.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\allure_commons\\_allure.py:200: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_hooks.py:493: in __call__\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_manager.py:115: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\allure_pytest\\listener.py:249: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\allure_commons\\reporter.py:165: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_hooks.py:493: in __call__\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_manager.py:115: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <allure_commons.logger.AllureFileLogger object at 0x0000020557F3EAD0>, body = None, file_name = 'b31e83d3-cc6d-47bd-b594-905d36b53051-attachment.png'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = self._report_dir / file_name\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, str):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'NoneType'\n\n..\\..\\pythonProject12\\venv\\lib\\site-packages\\allure_commons\\logger.py:53: TypeError"}, "description": "Позитивный тест проверки создания карточки питомца без фото. Валидация теста выполнена успешно в случае, если\n        после ввода всех необходимых данных в форму карточки, пользователь остается на страницы path = \"/my_pets\", а\n        карточка отображается в стеке питомцев пользователя со всеми переданными данными (без фото соответственно).", "steps": [{"name": "Шаг 1: Ввод данных и создание карточки питомца без фото.", "status": "passed", "start": 1705654079141, "stop": 1705654079700}, {"name": "Шаг 2: Перезагрузка страницы с созданной карточкой питомца.", "status": "passed", "start": 1705654079700, "stop": 1705654082996}, {"name": "Шаг 3: Assert-проверка успешной валидации теста.", "status": "broken", "statusDetails": {"message": "TypeError: a bytes-like object is required, not 'NoneType'\n", "trace": "  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject15_PageObjects_tests\\tests\\test_my_pets_positive.py\", line 40, in test_create_pet_simple_positive\n    allure.attach(screenshot,\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 200, in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_hooks.py\", line 493, in __call__\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_manager.py\", line 115, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_callers.py\", line 113, in _multicall\n    raise exception.with_traceback(exception.__traceback__)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\allure_pytest\\listener.py\", line 249, in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\allure_commons\\reporter.py\", line 165, in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_hooks.py\", line 493, in __call__\n    return self._hookexec(self.name, self._hookimpls, kwargs, firstresult)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_manager.py\", line 115, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_callers.py\", line 113, in _multicall\n    raise exception.with_traceback(exception.__traceback__)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\pluggy\\_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\agafo\\PycharmProjects\\pythonProject12\\venv\\lib\\site-packages\\allure_commons\\logger.py\", line 53, in report_attached_data\n    attached_file.write(body)\n"}, "attachments": [{"name": "create_pet_simple_PASSED", "source": "b31e83d3-cc6d-47bd-b594-905d36b53051-attachment.png", "type": "image/png"}], "start": 1705654082996, "stop": 1705654083119}], "start": 1705654079140, "stop": 1705654083125, "uuid": "1d2c7872-3eaf-4570-ba80-356163062817", "historyId": "70e77dcab4382ea3c2ffed9b0aa7f140", "testCaseId": "70e77dcab4382ea3c2ffed9b0aa7f140", "fullName": "tests.test_my_pets_positive.TestMyPetsPagePositive#test_create_pet_simple_positive", "labels": [{"name": "severity", "value": "blocker"}, {"name": "feature", "value": "Создание карточек питомцев_POSITIVE TESTS"}, {"name": "story", "value": "Создание карточки питомца без фото"}, {"name": "tag", "value": "create_simple"}, {"name": "tag", "value": "one"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_my_pets_positive"}, {"name": "subSuite", "value": "TestMyPetsPagePositive"}, {"name": "host", "value": "DESKTOP-J32RPI2"}, {"name": "thread", "value": "13044-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_my_pets_positive"}]}